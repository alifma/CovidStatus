{"version":3,"sources":["views/About.jsx","helpers/indonesian.js","views/Home/action.js","views/Landing.jsx","helpers/customDate.js","helpers/simpleDate.js","views/Details.jsx","router/index.js","components/Navbar.jsx","components/Footer.jsx","App.js","reportWebVitals.js","redux/reducer/global.js","redux/reducer/countries.js","redux/reducer/details.js","redux/reducer/root.js","redux/store.js","index.js"],"names":["About","className","target","rel","href","FormatIndo","value","toLocaleString","replace","apiURL","Landing","useState","search","setSearch","searchResult","setSearchResult","dispatch","useDispatch","dataGlobal","useSelector","state","global","searchName","hasilSearch","country","filter","i","Slug","includes","toLowerCase","useEffect","type","payload","Promise","resolve","reject","axios","get","then","res","data","catch","err","src","alt","listLoading","role","listError","errMessage","formatIndo","list","TotalConfirmed","NewConfirmed","toFixed","TotalDeaths","NewDeaths","TotalRecovered","NewRecovered","onSubmit","e","preventDefault","searchByName","placeholder","onChange","length","map","item","indexResult","to","CountryCode","Country","formatDate","date","day","Date","getDay","month","getMonth","dates","getDate","years","getFullYear","simpleDate","toString","WrappedMap","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","Details","params","useParams","detailCountry","details","chartData","setChartData","slug","reverse","caseDate","confCase","deathCase","recovCase","activeCase","slice","push","Number","Confirmed","Deaths","Recovered","Active","labels","datasets","label","backgroundColor","borderWidth","console","log","chartRender","style","width","height","Lat","Lon","googleMapURL","process","loadingElement","containerElement","mapElement","overflowY","index","options","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","router","path","exact","navbar","id","Footer","App","Navbar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","globalReducers","action","Global","Countries","countriesReducers","detailReducers","rootReducers","combineReducers","middleware","applyMiddleware","reduxPromise","storeRedux","createStore","ReactDOM","render","Fragment","store","document","getElementById"],"mappings":"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","file":"static/js/main.00f269ec.chunk.js","sourcesContent":["const About = () => {\n  return (\n    <div className=\"container py-5\">\n      <div className=\"card\">\n        <div className=\"text-center card-body\">\n          <h1 className=\"font-weight-bold mb-3\">\n            <span className=\"text-main\">About </span>This Webpage\n          </h1>\n          <h5>\n            This Webpage are created by{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://github.com/alifma\"\n              className=\"text-main\"\n            >\n              Alifma\n            </a>{\" \"}\n            using ReactJS, ReactStrap, Redux, Axios And Google Maps.\n          </h5>\n          <h5>\n            API services used from{\" \"}\n            <a \n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"text-main\"\n              href=\"https://documenter.getpostman.com/view/10808728/SzS8rjbc\">\n              api.covid19api.com\n            </a>{\" \"}\n            & Images used from{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"text-main\"\n              href=\"https://www.countryflags.io/\"\n            >\n              Countryflags.io\n            </a>\n          </h5>\n          <p className=\"text-center my-4\">\n            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/alifma/CovidStatus\" className=\"text-secondary\">Checkout this Project Repository</a></p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default About;\n","const FormatIndo = (value) => {\n  return value.toLocaleString().replace(/,/g, '.')\n}\n\nexport default FormatIndo;","import axios from 'axios'\nconst apiURL = \"https://api.covid19api.com\"\nexport const GET_GLOBAL_DATA = () => {\n  return {\n    type: 'GET_GLOBAL_DATA',\n    payload: new Promise((resolve, reject) => {\n      axios.get(`${apiURL}/summary`)\n        .then((res) => {\n          resolve(res.data)\n        })\n        .catch((err) => {\n          reject(err)\n        })\n    })\n  }\n}\n\nexport const GET_COUNTRY_DATA = () => {\n  return {\n    type: 'GET_COUNTRY_DATA',\n    payload: new Promise((resolve, reject) => {\n      axios.get(`${apiURL}/countries`)\n        .then((res) => {\n          resolve(res.data)\n        })\n        .catch((err) => {\n          reject(err)\n        })\n    })\n  }\n}\n\nexport const GET_COUNTRY_DETAILS = (slug) => {\n  return {\n    type: 'GET_COUNTRY_DETAILS',\n    payload: new Promise((resolve, reject) => {\n      axios.get(`${apiURL}/country/${slug}`)\n        .then((res) => {\n          resolve((res.data).reverse())\n        })\n        .catch((err) => {\n          reject(err)\n        })\n    })\n  }\n}","import { useState, useEffect } from \"react\";\nimport formatIndo from \"../helpers/indonesian\";\nimport { Link } from 'react-router-dom'\n// Redux\nimport { GET_GLOBAL_DATA, GET_COUNTRY_DATA } from \"./Home/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Landing = () => {\n  const [search, setSearch] = useState('')\n  const [searchResult, setSearchResult] = useState([])\n  const dispatch = useDispatch()\n  const dataGlobal = useSelector((state) => state.global)\n\n  const searchName = () => {\n    let hasilSearch = dataGlobal.country.filter((i) => {\n      return i.Slug.includes(search.toLowerCase())\n    })\n    setSearchResult(hasilSearch)\n  }\n  const searchByName = (e) => {\n    e.preventDefault()\n    searchName()\n  }\n  // Call Action When Mounted Via Redux\n  useEffect(() => {\n    searchName()\n    dispatch(GET_GLOBAL_DATA())\n    dispatch(GET_COUNTRY_DATA())\n  }, [])\n  return (\n    <div className=\"container\">\n      <div className=\"row vh-full pt-5 pt-lg-0 pt-md-0\">\n        <div className=\"col-12 col-md-6 my-auto col-lg-6\">\n          <h1 className=\"font-weight-bold text-lg-left text-md-left text-center\">\n            <span className=\"text-main\">Covid-19 </span>Cases{\" \"}\n          </h1>\n          <h2 className=\"font-weight-bold text-md-left text-lg-left text-center\">Information Website</h2>\n          <h5 className=\"text-lg-left text-md-left text-center\">\n            You can find Covid-19 <span className=\"text-main\">confirmed</span>,{\" \"}\n            <span className=\"text-danger\">death</span> and{\" \"}\n            <span className=\"text-success\">recovered </span> case around the\n            world\n          </h5>\n          <p className=\"text-secondary text-lg-left text-md-left text-center mb-0\">\n            Source:{\" \"}\n            <a\n              className=\"text-secondary\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://documenter.getpostman.com/view/10808728/SzS8rjbc\"\n            >\n              Covid-19Api.com\n            </a>\n          </p>\n        </div>\n        <div className=\"col-12 col-md-6 col-lg-6\">\n          <img\n            src=\"https://i.ibb.co/CKWFyht/5876.png\"\n            className=\"img-fluid\"\n            alt=\"countryflags.png\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-12\">\n          {dataGlobal.listLoading ? (\n            <div className=\"my-5\">\n              <div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n              <h5 className=\"text-center\">Please Wait...</h5>\n            </div>\n          ) : dataGlobal.listError ? (\n            <div className=\"my-5\">\n              <h3 className=\"text-center text-secondary\"> {dataGlobal.errMessage} </h3>\n              <p className=\"text-center text-secondary\"> Try Again Later </p>\n            </div>\n          ) : (\n            <div>\n              <h2 className=\"text-center font-weight-bold my-3\">Global Status</h2>\n              <div className=\"row\">\n                {/* Confirmed */}\n                <div className=\"col-12 col-lg-4 col-md-4 mb-3\">\n                  <div className=\"card alert-warning radius-25\">\n                    <div className=\"card-body \">\n                      <h3 className=\"font-weight-bold\">Confirmed</h3>\n                      <h5 className=\"text-dark mb-0\">Total Case</h5>\n                      <h5 className=\"text-warning d-inline font-weight-bold\">\n                        {formatIndo(dataGlobal.list.TotalConfirmed)}\n                      </h5>\n                      <p className=\"pl-2 d-inline align-top\">\n                        <span className=\"text-success\">{`(+ ${formatIndo(\n                          (\n                            (dataGlobal.list.NewConfirmed /\n                              (dataGlobal.list.TotalConfirmed -\n                                dataGlobal.list.NewConfirmed)) *\n                            100\n                          ).toFixed(2)\n                        )} %)`}</span>\n                      </p>\n                      <h5 className=\"text-dark mb-0\"> Today</h5>\n                      <h5>\n                        <span className=\"text-warning font-weight-bold\">\n                          {formatIndo(dataGlobal.list.NewConfirmed)}\n                        </span>\n                      </h5>\n                    </div>\n                  </div>\n                </div>\n                {/* Death */}\n                <div className=\"col-12 col-lg-4 col-md-4 mb-3\">\n                  <div className=\"card alert-danger radius-25\">\n                    <div className=\"card-body \">\n                      <h3 className=\"font-weight-bold\">Deaths</h3>\n                      <h5 className=\"text-dark mb-0\">Total Death</h5>\n                      <h5 className=\"text-danger d-inline font-weight-bold\">\n                        {formatIndo(dataGlobal.list.TotalDeaths)}\n                      </h5>\n                      <p className=\"pl-2 d-inline align-top\">\n                        <span className=\"text-success\">{`(+ ${formatIndo(\n                          (\n                            (dataGlobal.list.NewDeaths /\n                              (dataGlobal.list.TotalDeaths -\n                                dataGlobal.list.NewDeaths)) *\n                            100\n                          ).toFixed(2)\n                        )} %)`}</span>\n                      </p>\n                      <h5 className=\"text-dark mb-0\">Today</h5>\n                      <h5>\n                        <span className=\"text-danger font-weight-bold\">\n                          {formatIndo(dataGlobal.list.NewDeaths)}\n                        </span>\n                      </h5>\n                    </div>\n                  </div>\n                </div>\n                {/* Recovered */}\n                <div className=\"col-12 col-lg-4 col-md-4 mb-3\">\n                  <div className=\"card alert-success radius-25\">\n                    <div className=\"card-body \">\n                      <h3 className=\"font-weight-bold\">Recovered</h3>\n                      <h5 className=\"text-dark mb-0\">Total Recovered</h5>\n                      <h5 className=\"text-success d-inline font-weight-bold\">\n                        {formatIndo(dataGlobal.list.TotalRecovered)}\n                      </h5>\n                      <p className=\"pl-2 d-inline align-top\">\n                        <span className=\"text-success\">{`(+ ${formatIndo(\n                          (\n                            (dataGlobal.list.NewRecovered /\n                              (dataGlobal.list.TotalRecovered -\n                                dataGlobal.list.NewRecovered)) *\n                            100\n                          ).toFixed(2)\n                        )} %)`}</span>\n                      </p>\n                      <h5 className=\"text-dark mb-0\">Today</h5>\n                      <h5>\n                        <span className=\"text-success font-weight-bold\">\n                          {formatIndo(dataGlobal.list.NewRecovered)}\n                        </span>\n                      </h5>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr />\n              <h2 className=\"text-center font-weight-bold my-3\">Indonesia Status</h2>\n              <div className=\"row\">\n                {/* Confirmed */}\n                <div className=\"col-12 col-lg-4 col-md-4 mb-3\">\n                  <div className=\"card alert-warning radius-25\">\n                    <div className=\"card-body \">\n                      <h3 className=\"font-weight-bold\">Confirmed</h3>\n                      <h5 className=\"text-dark mb-0\">Total Case</h5>\n                      <h5 className=\"text-warning d-inline font-weight-bold\">\n                        {formatIndo(dataGlobal.country[77].TotalConfirmed)}\n                      </h5>\n                    </div>\n                  </div>\n                </div>\n                {/* Death */}\n                <div className=\"col-12 col-lg-4 col-md-4 mb-3\">\n                  <div className=\"card alert-danger radius-25\">\n                    <div className=\"card-body \">\n                      <h3 className=\"font-weight-bold\">Deaths</h3>\n                      <h5 className=\"text-dark mb-0\">Total Death</h5>\n                      <h5 className=\"text-danger d-inline font-weight-bold\">\n                        {formatIndo(dataGlobal.country[77].TotalDeaths)}\n                      </h5>\n                    </div>\n                  </div>\n                </div>\n                {/* Recovered */}\n                <div className=\"col-12 col-lg-4 col-md-4 mb-3\">\n                  <div className=\"card alert-success radius-25\">\n                    <div className=\"card-body \">\n                      <h3 className=\"font-weight-bold\">Recovered</h3>\n                      <h5 className=\"text-dark mb-0\">Total Recovered</h5>\n                      <h5 className=\"text-success d-inline font-weight-bold\">\n                        {formatIndo(dataGlobal.country[77].TotalRecovered)}\n                      </h5>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr />\n              <div>\n                <h2 className=\"text-center font-weight-bold\">\n                  Find Your Country Data\n                </h2>\n                <div className=\"text-center my-3\">\n                  <form\n                    onSubmit={(e) => searchByName(e)}\n                    className=\"form-inline\"\n                  >\n                    <div className=\"mx-auto mb-3\">\n                      <input\n                        className=\"form-control mb-3\"\n                        type=\"text\"\n                        placeholder=\"Find your country\"\n                        value={search}\n                        onChange={(e) => setSearch(e.target.value)}\n                      ></input>\n                      <button type=\"submit\" className=\"btn btn-primary ml-2 mb-3\">\n                        <i className=\"fas fa-search mr-2\"></i> Search\n                      </button>\n                    </div>\n                  </form>\n                </div>\n                <div className=\"row\">\n                  {search === \"\" ? (\n                    <div className=\"col-12\">\n                      <h5 className=\"text-center\">\n                        Please Type Something And Press enter\n                      </h5>\n                    </div>\n                  ) : searchResult.length <= 0 ? (\n                    <div className=\"col-12\">\n                      <h2 className=\"text-center\">No result</h2>\n                    </div>\n                  ) : (\n                    searchResult.map((item, indexResult) => (\n                      <div\n                        key={indexResult}\n                        className=\"col-6 col-lg-4 col-md-4\"\n                      >\n                        <div className=\"card mb-3\">\n                          <div className=\"card-body text-center\">\n                            <Link to={`/${item.Slug}`} className=\"d-inline font-weight-bold text-dark\">\n                              <img\n                                className=\"d-inline mr-2\"\n                                alt=\"countryflags.png\"\n                                src={`https://www.countryflags.io/${item.CountryCode.toLowerCase()}/flat/64.png`}\n                              />\n                              {`${item.Country} (${item.CountryCode})`}\n                            </Link>\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Landing;\n","const formatDate = (date) => {\n  const arrMonth = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'Desember']\n  const arrDay = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  const day = arrDay[new Date(date).getDay()]\n  const month = arrMonth[new Date(date).getMonth()]\n  const dates = new Date(date).getDate()\n  const years = new Date(date).getFullYear()\n  return(`${day}, ${dates} ${month} ${years}`)\n}\nexport default formatDate","const simpleDate = (date) => {\n  let month = new Date(date).getMonth().toString()\n  month = month.length > 1? month: '0' + month;\n  let dates = new Date(date).getDate().toString()\n  dates = dates.length > 1? dates: '0' + dates;\n  const years = new Date(date).getFullYear()\n  return(`${dates}/${month}/${years}`)\n}\nexport default simpleDate","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport formatDate from \"../helpers/customDate\";\nimport formatIndo from \"../helpers/indonesian\";\nimport simpleDate from \"../helpers/simpleDate\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n// Redux\nimport { GET_COUNTRY_DETAILS } from \"./Home/action\";\n// useSelector = mapGetter\n// useDispatch = mapAction\nimport { useSelector, useDispatch } from \"react-redux\";\n// GoogleMaps\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n} from \"react-google-maps\";\n\n// ChartJS\nimport { Line } from \"react-chartjs-2\";\n\nfunction Map(props) {\n  return (\n    <GoogleMap\n      defaultZoom={4}\n      defaultCenter={{ lat: props.lat, lng: props.lng }}\n    >\n      <Marker position={{ lat: props.lat, lng: props.lng }} />\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nconst Details = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  // CountryData via Redux\n  const detailCountry = useSelector((state) => state.details);\n  // ChartJS data\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const chartRender = () => {\n      let caseDate = [];\n      let confCase = [];\n      let deathCase = [];\n      let recovCase = [];\n      let activeCase = [];\n      axios\n        .get(`https://api.covid19api.com/country/${params.slug}`)\n        .then((res) => {\n          for (let data of res.data.reverse().slice(0, 30).reverse()) {\n            confCase.push(Number(data.Confirmed));\n            deathCase.push(Number(data.Deaths));\n            recovCase.push(Number(data.Recovered));\n            activeCase.push(Number(data.Active));\n            caseDate.push(simpleDate(data.Date));\n          }\n          // console.log(confCase)\n          setChartData({\n            labels: caseDate,\n            datasets: [\n              {\n                label: \"Death Case\",\n                data: deathCase,\n                backgroundColor: [\"rgba(220, 53, 69, 1)\"],\n                borderWidth: 4,\n              },\n              {\n                label: \"Active Case\",\n                data: activeCase,\n                backgroundColor: [\"rgba(70, 110, 182, 0.5)\"],\n                borderWidth: 4,\n              },\n              {\n                label: \"Recovered Case\",\n                data: recovCase,\n                backgroundColor: [\"rgba(40, 167, 69, 0.3)\"],\n                borderWidth: 4,\n              },\n              {\n                label: \"Confirmed Case\",\n                data: confCase,\n                backgroundColor: [\"rgba(255, 193, 7, 0.3)\"],\n                borderWidth: 4,\n              },\n            ],\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    dispatch(GET_COUNTRY_DETAILS(params.slug));\n    chartRender();\n  }, []);\n  return (\n    <div className=\"container pt-5\">\n      <Link to=\"/\" className=\"h1 text-dark float-left\">\n        <i className=\"fas fa-arrow-left\"></i>\n      </Link>\n      <h1 className=\"text-white float-right\">\n        <i className=\"fas fa-arrow-left\"></i>\n      </h1>\n      <h1 className=\"text-center mb-5\">Country Details</h1>\n      {detailCountry.listLoading ? (\n        <div>\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n          <h5 className=\"text-center\">Please Wait...</h5>\n        </div>\n      ) : detailCountry.listError ? (\n        <div>\n          <h1 className=\"text-center text-secondary mt-5\">\n            {\" \"}\n            {detailCountry.errMessage}{\" \"}\n          </h1>\n          <p className=\"text-center text-secondary mb-5\"> Try Again Later </p>\n        </div>\n      ) : (\n        <div>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h1 className=\"d-inline\">\n                <img\n                  className=\"d-inline mr-4\"\n                  alt=\"countryflags.png\"\n                  src={`https://www.countryflags.io/${detailCountry.list[0].CountryCode.toLowerCase()}/flat/64.png`}\n                />\n                {`${detailCountry.list[0].Country} (${detailCountry.list[0].CountryCode})`}\n              </h1>\n              <div className=\"row mt-4\">\n                <div className=\"col-12 col-lg-6 colmd-6\">\n                  <div className=\"row\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold mb-0\">Confirmed</p>\n                    </div>\n                    <div className=\"col-8\">\n                      <p className=\"mb-0\">\n                        {formatIndo(detailCountry.list[0].Confirmed)}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold mb-0\">Deaths</p>\n                    </div>\n                    <div className=\"col-8\">\n                      <p className=\"mb-0\">\n                        {formatIndo(detailCountry.list[0].Deaths)}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold mb-0\">Recovered</p>\n                    </div>\n                    <div className=\"col-8\">\n                      <p className=\"mb-0\">\n                        {formatIndo(detailCountry.list[0].Recovered)}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold mb-0\">Active</p>\n                    </div>\n                    <div className=\"col-8\">\n                      <p className=\"mb-0\">\n                        {formatIndo(detailCountry.list[0].Active)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12 col-lg-6 col-md-6\">\n                  <div className=\"row\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold mb-0\">Updated</p>\n                    </div>\n                    <div className=\"col-8\">\n                      <p className=\"mb-0\">\n                        {formatDate(\n                          new Date(formatIndo(detailCountry.list[0].Date))\n                        )}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row mt-4\">\n                <div className=\"col-12 col-lg-6 col-md-6\">\n                  <h4 className=\"font-weight-bold my-3\">Maps Location</h4>\n                  <div style={{ width: \"100%\", height: \"50vh\" }}>\n                    <WrappedMap\n                      lat={Number(detailCountry.list[0].Lat)}\n                      lng={Number(detailCountry.list[0].Lon)}\n                      googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                      loadingElement={<div style={{ height: \"100%\" }} />}\n                      containerElement={<div style={{ height: \"100%\" }} />}\n                      mapElement={<div style={{ height: \"100%\" }} />}\n                    />\n                  </div>\n                </div>\n                <div\n                  className=\"col-12 col-lg-6 col-md-6\"\n                  style={{ overflowY: \"scroll\", height: \"60vh\" }}\n                >\n                  <h4 className=\"font-weight-bold my-3\">Daily Update</h4>\n                  {detailCountry.list.map((item, index) => (\n                    <div key={index}>\n                      <div className=\"card mb-3\">\n                        <div className=\"card-body\">\n                          <h5 className=\"font-weight-bold\">\n                            {formatDate(item.Date)}\n                          </h5>\n                          <div className=\"row\">\n                            <div className=\"col-5\">\n                              <p className=\"font-weight-bold mb-0\">Confirmed</p>\n                            </div>\n                            <div className=\"col-7\">\n                              <p className=\"font-weight-bold mb-0 text-warning\">\n                                {formatIndo(item.Confirmed)}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"row\">\n                            <div className=\"col-5\">\n                              <p className=\"font-weight-bold mb-0\">Deaths</p>\n                            </div>\n                            <div className=\"col-7\">\n                              <p className=\"font-weight-bold mb-0 text-danger\">\n                                {formatIndo(item.Deaths)}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"row\">\n                            <div className=\"col-5\">\n                              <p className=\"font-weight-bold mb-0\">Recovered</p>\n                            </div>\n                            <div className=\"col-7\">\n                              <p className=\"font-weight-bold mb-0 text-success\">\n                                {formatIndo(item.Recovered)}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"row mt-4\">\n                <div className=\"col-12\">\n                  <h4 className=\"font-weight-bold\">Daily Update</h4>\n                  <Line\n                    data={chartData}\n                    options={{\n                      responsive: true,\n                      title: { text: \"Last 30 Days Data\", display: true },\n                      scales: {\n                        yAxes: [\n                          {\n                            ticks: {\n                              autoSkip: true,\n                              maxTicksLimit: 10,\n                              beginAtZero: true,\n                            },\n                            gridLines: {\n                              display: false,\n                            },\n                          },\n                        ],\n                        xAxes: [\n                          {\n                            gridLines: {\n                              display: false,\n                            },\n                          },\n                        ],\n                      },\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Details;\n","import { Switch, Route } from 'react-router-dom'\nimport About from '../views/About'\nimport Landing from '../views/Landing'\nimport Details from '../views/Details'\nconst router = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Landing/>\n      </Route>\n      <Route path=\"/about\" exact>\n        <About/>\n      </Route>\n      <Route path=\"/:slug\">\n        <Details/>\n      </Route>\n    </Switch>\n  )\n}\nexport default router","import { Link } from 'react-router-dom'\nconst navbar = () => {\n  return (\n    <div className=\"bg-light\">\n      <div className=\"container\">\n      <nav className=\"navbar navbar-expand navbar-light\">\n      <Link className=\"navbar-brand font-weight-bold\" to=\"/\">\n        <span className=\"text-main\">Covid-19</span> Status\n      </Link>\n      \n      <div className=\"collapse justify-content-end navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\">\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/about\">\n              About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n    </div>\n    </div>\n  );\n};\nexport default navbar;\n","const Footer = () => {\n  return (\n    <div className=\"container my-4\">\n      <hr/>\n      <p className=\" font-weight-light text-center mb-0\">\n        &copy; Alifma 2020. All right reserved.\n      </p>\n      <div className=\"text-center\">\n        <a target=\"_blank\"  rel=\"noreferrer\"\n          className=\"text-secondary mb-0\"\n          href=\"https://alifma.com\"\n        >\n          <small className=\" font-weight-light ml-2\">\n            <i className=\"fas fa-globe\"></i> alifma.com\n          </small>\n        </a>\n        <a target=\"_blank\"  rel=\"noreferrer\"\n          className=\"text-secondary mb-0\"\n          href=\"https://github.com/alifma\"\n        >\n          <small className=\" font-weight-light ml-2\">\n            <i className=\"fab fa-github\"></i> alifma\n          </small>\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","import { BrowserRouter } from 'react-router-dom'\nimport Router from './router/index'\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer'\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar/>\n      <Router/>\n      <Footer />\n    </BrowserRouter>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Inisialisasi state awalnya\nconst initialState = {\n  list: {\n    TotalConfirmed: 0,\n    NewConfirmed: 0,\n    TotalDeaths: 0,\n    NewDeaths: 0,\n    TotalRecovered: 0,\n    NewRecovered: 0\n  },\n  country: [],\n  listLoading: true,\n  listError: false,\n  errMessage: null\n}\n\nconst globalReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_GLOBAL_DATA_PENDING\":\n      console.log('pending')\n      return {...state, listLoading: true}\n    case \"GET_GLOBAL_DATA_FULFILLED\":\n      console.log('FullFilled')\n      return {...state, listLoading: false, list: action.payload.Global, country: action.payload.Countries}\n    case \"GET_GLOBAL_DATA_REJECTED\":\n      console.log('Rejected')\n      return {...state, listLoading: false, listError: true, errMessage: 'Server Did Not Response :('}\n    default: \n      return state\n  }\n}\n\nexport default globalReducers","const initialState = {\n  list: [],\n  listLoading: true,\n  listError: false,\n  errMessage: null\n}\n\nconst countriesReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_COUNTRY_DATA_PENDING\":\n      return {...state, listLoading: true}\n    case \"GET_COUNTRY_DATA_FULFILLED\":\n      return {...state, listLoading: false, list: action.payload}\n    case \"GET_COUNTRY_DATA_REJECTED\":\n      return {...state, listLoading: false, listError: true, errMessage: 'Server Did Not Response :('}\n    default: \n      return state\n  }\n}\n\nexport default countriesReducers","const initialState = {\n  list: [],\n  listLoading: true,\n  listError: false,\n  errMessage: null\n}\n\nconst detailReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_COUNTRY_DETAILS_PENDING\":\n      return {...state, listLoading: true}\n    case \"GET_COUNTRY_DETAILS_FULFILLED\":\n      return {...state, listLoading: false, list: action.payload}\n    case \"GET_COUNTRY_DETAILS_REJECTED\":\n      return {...state, listLoading: false, listError: true, errMessage: 'Server Did Not Response :('}\n    default: \n      return state\n  }\n}\n\nexport default detailReducers","import { combineReducers } from 'redux'\nimport globalReducers from './global'\nimport countriesReducers from './countries'\nimport detailReducers from './details'\n\nconst rootReducers = combineReducers({\n  global: globalReducers,\n  country: countriesReducers,\n  details: detailReducers\n})\n\n\nexport default rootReducers","import { createStore, applyMiddleware } from 'redux'\nimport rootReducers from './reducer/root'\nimport reduxPromise from 'redux-promise-middleware'\n\nconst middleware = applyMiddleware(\n  reduxPromise\n)\n\nconst storeRedux = createStore(rootReducers, middleware)\n\nexport default storeRedux","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Redux\nimport storeRedux from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={storeRedux}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}